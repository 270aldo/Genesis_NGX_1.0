# NGX-AGENTS Environment Configuration Template
# ============================================
# This is a template file. Copy to .env and replace with actual values
# DO NOT commit .env file with real credentials
# Last updated: 2025-07-17

# Environment Type
# Options: development, testing, staging, production
ENV=development
DEBUG=False
LOG_LEVEL=INFO

# ===========================
# Server Configuration
# ===========================
HOST=0.0.0.0
PORT=8000

# A2A (Agent-to-Agent) WebSocket Server
A2A_HOST=localhost
A2A_PORT=8001
A2A_SERVER_URL=http://localhost:8001
A2A_WEBSOCKET_URL=ws://localhost:8001
A2A_HEALTH_HOST=0.0.0.0
A2A_HEALTH_PORT=8001

# ===========================
# Google Cloud Platform / Vertex AI
# ===========================
# SECURITY WARNING: NEVER commit credentials to the repository
# Options for authentication (in order of preference):
# 1. Use Application Default Credentials (ADC) - Recommended for production
# 2. Use Google Secret Manager - Recommended for production
# 3. Set GOOGLE_APPLICATION_CREDENTIALS to a local file path - Development only
#
# For ADC setup, run: gcloud auth application-default login
# For production, use Workload Identity or Service Account impersonation
#
# For local development, set the path to your credentials file
GOOGLE_APPLICATION_CREDENTIALS=./credentials.json
GOOGLE_CLOUD_PROJECT=agentes-ngx
GCP_PROJECT_ID=agentes-ngx
GCP_REGION=us-central1
VERTEX_PROJECT_ID=your-gcp-project-id
VERTEX_LOCATION=us-central1
# VERTEX_API_KEY is deprecated - use service account authentication instead

# Google Cloud Storage
GCS_BUCKET_NAME=your-bucket-name
GCS_BUCKET_LOCATION=us

# Vertex AI Cache Configuration
USE_REDIS_CACHE=false
VERTEX_L1_SIZE_RATIO=0.3
VERTEX_PREFETCH_THRESHOLD=0.7

# Vertex AI Monitoring Thresholds
VERTEX_ALERT_HIT_RATIO_THRESHOLD=0.4
VERTEX_ALERT_MEMORY_USAGE_THRESHOLD=0.85
VERTEX_ALERT_LATENCY_THRESHOLD_MS=500
VERTEX_ALERT_ERROR_RATE_THRESHOLD=0.05
VERTEX_MONITORING_INTERVAL=300

# Gemini API Configuration (deprecated - use Vertex AI)
GEMINI_API_KEY=your-gemini-api-key-here

# ===========================
# Supabase Configuration
# ===========================
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-anon-key-here
SUPABASE_KEY=your-service-role-key-here

# ===========================
# Redis Configuration
# ===========================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password-here
REDIS_URL=redis://default:your-redis-password@localhost:6379  # pragma: allowlist secret
REDIS_DB=1

# Cache Configuration
PROGRAM_CACHE_TTL=3600

# ===========================
# JWT Authentication
# ===========================
# IMPORTANT: Generate a secure secret key with at least 256 bits (32 characters)
# Example: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET=your-super-secret-jwt-key-minimum-32-characters
JWT_ALGORITHM=HS256
JWT_EXPIRATION_MINUTES=60

# ===========================
# CORS Configuration
# ===========================
CORS_ALLOWED_ORIGINS=["http://localhost:3000","http://localhost:5173","http://localhost:4200"]
CORS_ALLOW_CREDENTIALS=True
CORS_ALLOW_METHODS=["GET","POST","PUT","DELETE","OPTIONS"]
CORS_ALLOW_HEADERS=["*"]
FRONTEND_URL=http://localhost:3000

# ===========================
# Telemetry & Monitoring
# ===========================
ENABLE_TELEMETRY=False
USE_TELEMETRY_MOCK=true
ENVIRONMENT=development
APP_VERSION=0.1.0

# OpenTelemetry Configuration
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
OTEL_SERVICE_NAME=ngx-agents
OTEL_DEPLOYMENT_ENVIRONMENT=development
OTEL_LOG_LEVEL=INFO

# ===========================
# ElevenLabs Configuration
# ===========================
ELEVENLABS_API_KEY=your-elevenlabs-api-key-here
ELEVENLABS_VOICE_MODEL=eleven_flash_v2_5

# ===========================
# OpenAI Configuration
# ===========================
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-4o

# ===========================
# Security Configuration
# ===========================
# Enable/disable security features
ENABLE_RATE_LIMITING=True
ENABLE_SECURITY_HEADERS=True
ENABLE_AUDIT_TRAIL=True

# Rate Limiting
RATE_LIMIT_AUTH_REQUESTS=5
RATE_LIMIT_AUTH_WINDOW=60
RATE_LIMIT_CHAT_REQUESTS=30
RATE_LIMIT_CHAT_WINDOW=60
RATE_LIMIT_HEAVY_REQUESTS=10
RATE_LIMIT_HEAVY_WINDOW=3600

# ===========================
# GDPR/HIPAA Compliance
# ===========================
ENABLE_GDPR_FEATURES=True
ENABLE_HIPAA_COMPLIANCE=True
DATA_RETENTION_DAYS=2555  # 7 years for medical data
AUDIT_LOG_RETENTION_DAYS=1095  # 3 years

# ===========================
# Google Secret Manager (Production)
# ===========================
# Uncomment and configure for production use
# USE_SECRET_MANAGER=True
# SECRET_MANAGER_PROJECT_ID=your-project-id
# SECRET_PREFIX=ngx-agents

# ===========================
# Notes for Production Deployment
# ===========================
# 1. Never commit this file with real values
# 2. Use Google Secret Manager or similar for production
# 3. Rotate all secrets regularly (90 days recommended)
# 4. Use strong, unique passwords for all services
# 5. Enable all security features in production
# 6. Monitor rate limits and adjust as needed
